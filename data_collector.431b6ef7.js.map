{"version":3,"sources":["data_collector.js"],"names":["detect_browser_info","navigator","appVersion","nVer","nameOffset","verOffset","ix","nAgt","userAgent","browserName","appName","fullVersion","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","browser_name","full_version","major_version","navigator_app_name","navigator_user_agent","detect_os_info","OSName","os_name","window","addEventListener","browserInfo","osInfo","divolte","signal"],"mappings":";AAeA,SAASA,IACMC,UAAUC,WAAjBC,IAKAC,EAAWC,EAAUC,EAJrBC,EAAON,UAAUO,UACjBC,EAAeR,UAAUS,QACzBC,EAAe,GAAGC,WAAWX,UAAUC,YACvCW,EAAeC,SAASb,UAAUC,WAAW,IAsD1C,OAlDiC,IAAnCG,EAAUE,EAAKQ,QAAQ,WACxBN,EAAc,QACdE,EAAcJ,EAAKS,UAAUX,EAAU,IACG,IAArCA,EAAUE,EAAKQ,QAAQ,cACxBJ,EAAcJ,EAAKS,UAAUX,EAAU,MAGH,IAAlCA,EAAUE,EAAKQ,QAAQ,UAC7BN,EAAc,8BACdE,EAAcJ,EAAKS,UAAUX,EAAU,KAGG,IAApCA,EAAUE,EAAKQ,QAAQ,YAC7BN,EAAc,SACdE,EAAcJ,EAAKS,UAAUX,EAAU,KAGG,IAApCA,EAAUE,EAAKQ,QAAQ,YAC7BN,EAAc,SACdE,EAAcJ,EAAKS,UAAUX,EAAU,IACG,IAArCA,EAAUE,EAAKQ,QAAQ,cACxBJ,EAAcJ,EAAKS,UAAUX,EAAU,MAGA,IAArCA,EAAUE,EAAKQ,QAAQ,aAC7BN,EAAc,UACdE,EAAcJ,EAAKS,UAAUX,EAAU,KAGhCD,EAAWG,EAAKU,YAAY,KAAK,IACvCZ,EAAUE,EAAKU,YAAY,QAE5BR,EAAcF,EAAKS,UAAUZ,EAAWC,GACxCM,EAAcJ,EAAKS,UAAUX,EAAU,GACnCI,EAAYS,eAAeT,EAAYU,gBACvCV,EAAcR,UAAUS,WAII,IAA/BJ,EAAGK,EAAYI,QAAQ,QACxBJ,EAAYA,EAAYK,UAAU,EAAEV,KACJ,IAA/BA,EAAGK,EAAYI,QAAQ,QACxBJ,EAAYA,EAAYK,UAAU,EAAEV,IAExCO,EAAeC,SAAS,GAAGH,EAAY,IACnCS,MAAMP,KACNF,EAAe,GAAGC,WAAWX,UAAUC,YACvCW,EAAeC,SAASb,UAAUC,WAAW,KAG1C,CACHmB,aAAcZ,EACda,aAAcX,EACdY,cAAeV,EACfW,mBAAoBvB,UAAUS,QAC9Be,qBAAsBxB,UAAUO,WAIxC,SAASkB,IAEDC,IAAAA,EAAO,aAMJ,OALmC,GAAtC1B,UAAUC,WAAWa,QAAQ,SAAYY,EAAO,YACV,GAAtC1B,UAAUC,WAAWa,QAAQ,SAAYY,EAAO,UACV,GAAtC1B,UAAUC,WAAWa,QAAQ,SAAYY,EAAO,SACR,GAAxC1B,UAAUC,WAAWa,QAAQ,WAAcY,EAAO,SAE/C,CACHC,QAASD,GA5FjBE,OAAOC,iBAAiB,OAAQ,WAExBC,IAAAA,EAAc/B,IACdgC,EAASN,IAEbO,QAAQC,OAAO,cAAe,CAC1Bb,aAAcU,EAAYV,aAC1BC,aAAcS,EAAYT,aAC1BC,cAAeQ,EAAYR,cAC3BC,mBAAoBO,EAAYP,mBAChCC,qBAAsBM,EAAYN,qBAClCG,QAASI,EAAOJ","file":"data_collector.431b6ef7.js","sourceRoot":"..","sourcesContent":["window.addEventListener(\"load\", function(){\n\n    var browserInfo = detect_browser_info();\n    var osInfo = detect_os_info();\n\n    divolte.signal('onloadEvent', {\n        browser_name: browserInfo.browser_name,\n        full_version: browserInfo.full_version,\n        major_version: browserInfo.major_version,\n        navigator_app_name: browserInfo.navigator_app_name,\n        navigator_user_agent: browserInfo.navigator_user_agent,\n        os_name: osInfo.os_name,\n    });\n});\n\nfunction detect_browser_info() {\n    var nVer = navigator.appVersion;\n    var nAgt = navigator.userAgent;\n    var browserName  = navigator.appName;\n    var fullVersion  = ''+parseFloat(navigator.appVersion);\n    var majorVersion = parseInt(navigator.appVersion,10);\n    var nameOffset,verOffset,ix;\n\n    // In Opera, the true version is after \"Opera\" or after \"Version\"\n    if ((verOffset=nAgt.indexOf(\"Opera\"))!=-1) {\n        browserName = \"Opera\";\n        fullVersion = nAgt.substring(verOffset+6);\n        if ((verOffset=nAgt.indexOf(\"Version\"))!=-1)\n            fullVersion = nAgt.substring(verOffset+8);\n    }\n    // In MSIE, the true version is after \"MSIE\" in userAgent\n    else if ((verOffset=nAgt.indexOf(\"MSIE\"))!=-1) {\n        browserName = \"Microsoft Internet Explorer\";\n        fullVersion = nAgt.substring(verOffset+5);\n    }\n    // In Chrome, the true version is after \"Chrome\"\n    else if ((verOffset=nAgt.indexOf(\"Chrome\"))!=-1) {\n        browserName = \"Chrome\";\n        fullVersion = nAgt.substring(verOffset+7);\n    }\n    // In Safari, the true version is after \"Safari\" or after \"Version\"\n    else if ((verOffset=nAgt.indexOf(\"Safari\"))!=-1) {\n        browserName = \"Safari\";\n        fullVersion = nAgt.substring(verOffset+7);\n        if ((verOffset=nAgt.indexOf(\"Version\"))!=-1)\n            fullVersion = nAgt.substring(verOffset+8);\n    }\n    // In Firefox, the true version is after \"Firefox\"\n    else if ((verOffset=nAgt.indexOf(\"Firefox\"))!=-1) {\n        browserName = \"Firefox\";\n        fullVersion = nAgt.substring(verOffset+8);\n    }\n    // In most other browsers, \"name/version\" is at the end of userAgent\n    else if ( (nameOffset=nAgt.lastIndexOf(' ')+1) <\n        (verOffset=nAgt.lastIndexOf('/')) )\n    {\n        browserName = nAgt.substring(nameOffset,verOffset);\n        fullVersion = nAgt.substring(verOffset+1);\n        if (browserName.toLowerCase()==browserName.toUpperCase()) {\n            browserName = navigator.appName;\n        }\n    }\n    // trim the fullVersion string at semicolon/space if present\n    if ((ix=fullVersion.indexOf(\";\"))!=-1)\n        fullVersion=fullVersion.substring(0,ix);\n    if ((ix=fullVersion.indexOf(\" \"))!=-1)\n        fullVersion=fullVersion.substring(0,ix);\n\n    majorVersion = parseInt(''+fullVersion,10);\n    if (isNaN(majorVersion)) {\n        fullVersion  = ''+parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion,10);\n    }\n\n    return {\n        browser_name: browserName,\n        full_version: fullVersion,\n        major_version: majorVersion,\n        navigator_app_name: navigator.appName,\n        navigator_user_agent: navigator.userAgent,\n    };\n}\n\nfunction detect_os_info() {\n\n    var OSName=\"Unknown OS\";\n    if (navigator.appVersion.indexOf(\"Win\")!=-1) OSName=\"Windows\";\n    if (navigator.appVersion.indexOf(\"Mac\")!=-1) OSName=\"MacOS\";\n    if (navigator.appVersion.indexOf(\"X11\")!=-1) OSName=\"UNIX\";\n    if (navigator.appVersion.indexOf(\"Linux\")!=-1) OSName=\"Linux\";\n\n    return {\n        os_name: OSName,\n    };\n}\n"]}